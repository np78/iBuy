/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ExpenseTracker.java
 *
 * Created on May 5, 2012, 2:21:16 PM
 */
package ibuyswing;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Currency;
import java.util.Date;
import java.util.LinkedList;
import java.util.StringTokenizer;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTextField;

import com.dropbox.client2.DropboxAPI;
import com.dropbox.client2.session.WebAuthSession;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author Luke
 */
public class ExpenseTracker extends javax.swing.JFrame implements ActionListener {
    
    private LinkedList<JLabel> lists = new LinkedList<JLabel>();
    private LinkedList<JLabel> amounts = new LinkedList<JLabel>();
    private LinkedList<JLabel> dates = new LinkedList<JLabel>();
    /** Creates new form ExpenseTracker */
    public ExpenseTracker(String user, DropboxAPI<WebAuthSession> mDBApi, boolean byWeek, boolean byLastTrip) {
    
        
        initComponents();
        getList(user, mDBApi, byWeek, byLastTrip);
        setVisible(true);
    }
    public void getList(String user, DropboxAPI<WebAuthSession> mDBApi, boolean byWeek, boolean byLastTrip){
    
        String title = "iBuy - Expense Tracker";
        if(byWeek ^ byLastTrip)
        {
            if(byWeek)
                title += " (Week Old Lists)";
            if(byLastTrip)
                title += " (All)";
        }
        this.setTitle(title);

        StringTokenizer st = new StringTokenizer(Global.getFile(mDBApi, "/"+user+"/lists.txt"));
        while(st.hasMoreTokens())
        {
            String name = st.nextToken();
            String amount = st.nextToken();
            Date last = new Date(Date.parse(Global.readFileName(st.nextToken())));
            Date current = new Date(System.currentTimeMillis());
            boolean isBefore = compareDates(last, current);
            if((isBefore && byWeek) || byLastTrip || (!byLastTrip && !byWeek))
            {
                lists.add(new JLabel(Global.readFileName(name)));
                amounts.add(new JLabel("$" + amount));
                dates.add(new JLabel((last.getMonth()+1) + "/" + last.getDate() + "/" + (last.getYear()+1900)));
            }
        }
        mainPanel.setLayout(new GridLayout(lists.size(), 3));

        double totalAmount = 0;
        for(int i = 0; i < lists.size(); i++)
        {
            JPanel j = new JPanel();
            j.setLayout(new GridLayout(1, 3));
            j.add(lists.get(i));
            j.add(amounts.get(i));
            Double d = new Double(amounts.get(i).getText().substring(1));
            totalAmount += d;
            j.add(dates.get(i));
            mainPanel.add(j);
        }
        String totalText = new String("" + totalAmount);
        if(totalText.length() > 3)
            totalText = totalText.substring(0, totalText.indexOf('.') + 3);
        total.setText("$" + totalText);
        mainPanel.doLayout();
        mainPanel.setVisible(true);

    }
    public boolean compareDates(Date first, Date second)
    {
        if(first.getYear() <= second.getYear())
            {
                if(first.getMonth() <= second.getMonth())
                {
                    int diff = second.getMonth()-first.getMonth();
                    if(diff > 0)
                        return true;
                else if(second.getDate()-first.getDate() >= 7)
                    return true;
            }
        }
        return false;
}
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        nameSort = new javax.swing.JButton();
        amountSort = new javax.swing.JButton();
        dateSort = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setName("jPanel1"); // NOI18N

        nameSort.setText("Name");
        nameSort.setName("nameSort"); // NOI18N

        amountSort.setText("Total");
        amountSort.setName("amountSort"); // NOI18N

        dateSort.setText("Date");
        dateSort.setName("Date"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel1.setForeground(new java.awt.Color(255, 102, 0));
        jLabel1.setText("Sort By:");
        jLabel1.setName("jLabel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setLayout(new java.awt.GridLayout(1, 0));
        jScrollPane1.setViewportView(mainPanel);

        jLabel2.setBackground(new java.awt.Color(255, 255, 0));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18));
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setText("Total:");
        jLabel2.setName("jLabel2"); // NOI18N

        total.setFont(new java.awt.Font("Tahoma", 1, 18));
        total.setForeground(new java.awt.Color(255, 255, 0));
        total.setText("0");
        total.setName("total"); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 102, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Expense Tracker");
        jLabel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel3.setName("jLabel3"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(nameSort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(amountSort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateSort))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(total)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameSort)
                    .addComponent(amountSort)
                    .addComponent(dateSort))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(total))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton amountSort;
    private javax.swing.JButton dateSort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton nameSort;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource() == nameSort)
        {
            String temp;
            for(int i = 0; i < lists.size(); i++)
            {
                for(int j = 1; j < lists.size()-i; j++)
                {
                    if(lists.get(j-1).getText().compareTo(lists.get(j).getText()) > 0)
                    {
                        temp = lists.get(j-1).getText();
                        lists.get(j-1).setText(lists.get(j).getText());
                        lists.get(j).setText(temp);

                        temp = amounts.get(j-1).getText();
                        amounts.get(j-1).setText(amounts.get(j).getText());
                        amounts.get(j).setText(temp);

                        temp = dates.get(j-1).getText();
                        dates.get(j-1).setText(dates.get(j).getText());
                        dates.get(j).setText(temp);
                    }
                }
            }
            repaint();
        }
        if(e.getSource() == dateSort)
        {
            String temp;
            for(int i = 0; i < lists.size(); i++)
            {
                for(int j = 1; j < lists.size()-i; j++)
                {
                    String first = dates.get(j-1).getText();
                    String second = dates.get(j).getText();
                    if(first.substring(first.length()-4).compareTo(second.substring(second.length()-4)) >= 0)
                    {
                        Integer monthOne = new Integer(first.substring(0, first.indexOf('/')));
                        Integer monthTwo = new Integer(second.substring(0, second.indexOf('/')));
                        if(monthOne.compareTo(monthTwo) >= 0)
                        {
                            int diff = monthTwo.intValue() - monthOne.intValue();
                            boolean doSwitch = false;
                            Integer dayOne = new Integer(first.substring(first.indexOf('/')+1, first.indexOf('/', first.indexOf('/')+1)));
                            Integer dayTwo = new Integer(second.substring(second.indexOf('/')+1, second.indexOf('/', second.indexOf('/')+1)));
                            if(diff > 0)
                            doSwitch = true;
                            else if(dayOne < dayTwo)
                            doSwitch = true;
                            if(doSwitch)
                            {
                                temp = lists.get(j-1).getText();
                                lists.get(j-1).setText(lists.get(j).getText());
                                lists.get(j).setText(temp);

                                temp = amounts.get(j-1).getText();
                                amounts.get(j-1).setText(amounts.get(j).getText());
                                amounts.get(j).setText(temp);

                                temp = dates.get(j-1).getText();
                                dates.get(j-1).setText(dates.get(j).getText());
                                dates.get(j).setText(temp);
                            }
                        }
                    }
                }
            }
            repaint();
        }

        if(e.getSource() == amountSort)
        {
            String temp;
            for(int i = 0; i < lists.size(); i++)
            {
                for(int j = 1; j < lists.size()-i; j++)
                {
                    Double d1 = new Double(amounts.get(j-1).getText().substring(1));
                    Double d2 = new Double(amounts.get(j).getText().substring(1));
                    if(d1.doubleValue() > d2.doubleValue())
                    {
                        temp = lists.get(j-1).getText();
                        lists.get(j-1).setText(lists.get(j).getText());
                        lists.get(j).setText(temp);

                        temp = amounts.get(j-1).getText();
                        amounts.get(j-1).setText(amounts.get(j).getText());
                        amounts.get(j).setText(temp);

                        temp = dates.get(j-1).getText();
                        dates.get(j-1).setText(dates.get(j).getText());
                        dates.get(j).setText(temp);
                    }
                }
            }
            repaint();
        }
    }
}
