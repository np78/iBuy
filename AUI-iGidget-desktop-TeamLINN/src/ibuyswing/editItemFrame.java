/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * addItemFrame.java
 *
 * Created on Apr 15, 2012, 2:09:33 AM
 */
package ibuyswing;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import java.util.StringTokenizer;

import com.dropbox.client2.DropboxAPI;
import com.dropbox.client2.session.WebAuthSession;
import javax.swing.JOptionPane;
/**
 *
 * @author Luke
 */
public class editItemFrame extends javax.swing.JFrame implements ActionListener{

        private DropboxAPI<WebAuthSession> mDBApi;
	private String user, filename, originalName;
	private Item item;
        
    /** Creates new form addItemFrame */
    public editItemFrame(String user, String filename, Item item, DropboxAPI<WebAuthSession> mDBApi) {
        
                super("iBuy - Edit Item");
		this.user = user;
		this.filename = filename;
		this.item = item;
		this.mDBApi = mDBApi;
                originalName = item.getName();
    
        initComponents();
        getItemInfo();
        jRadioButton8.setSelected(true);
        setVisible(true);
    }
    public void getItemInfo(){
    
            currentCategoryLabelC.setText(item.getCategory());
            currentImportanceLabelC.setText("" + item.getImportance());
            currentItemLabelC.setText(item.getName());
            currentStoreLabelC.setText(item.getStore());    
    }
    
    public String getSelection()    
    {
        if(jRadioButton4.isSelected())
            return jRadioButton4.getText();
        if(jRadioButton5.isSelected())
            return jRadioButton5.getText();
        if(jRadioButton6.isSelected())
            return jRadioButton6.getText();
        if(jRadioButton7.isSelected())
            return jRadioButton7.getText();
        if(jRadioButton8.isSelected())
            return jRadioButton8.getText();
        return "";
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        editItemPanel = new javax.swing.JPanel();
        editItemLabel = new javax.swing.JLabel();
        currentItemNameLabel = new javax.swing.JLabel();
        newCategoryLabel = new javax.swing.JLabel();
        currentCategoryLabel = new javax.swing.JLabel();
        newItemNameLabel = new javax.swing.JLabel();
        currentStoreLabel = new javax.swing.JLabel();
        newStoreLabel = new javax.swing.JLabel();
        currentImportanceLabel = new javax.swing.JLabel();
        currentItemLabelC = new javax.swing.JLabel();
        currentCategoryLabelC = new javax.swing.JLabel();
        currentStoreLabelC = new javax.swing.JLabel();
        currentImportanceLabelC = new javax.swing.JLabel();
        newItemNameField = new javax.swing.JTextField();
        newCategoryField = new javax.swing.JTextField();
        newStoreField = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton8 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(editItemFrame.class);
        editItemPanel.setBackground(resourceMap.getColor("editItemPanel.background")); // NOI18N
        editItemPanel.setName("editItemPanel"); // NOI18N

        editItemLabel.setBackground(resourceMap.getColor("editItemLabel.background")); // NOI18N
        editItemLabel.setFont(resourceMap.getFont("editItemLabel.font")); // NOI18N
        editItemLabel.setForeground(resourceMap.getColor("editItemLabel.foreground")); // NOI18N
        editItemLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editItemLabel.setText(resourceMap.getString("editItemLabel.text")); // NOI18N
        editItemLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        editItemLabel.setName("editItemLabel"); // NOI18N

        currentItemNameLabel.setFont(resourceMap.getFont("currentItemNameLabel.font")); // NOI18N
        currentItemNameLabel.setForeground(resourceMap.getColor("currentItemNameLabel.foreground")); // NOI18N
        currentItemNameLabel.setText(resourceMap.getString("currentItemNameLabel.text")); // NOI18N
        currentItemNameLabel.setName("currentItemNameLabel"); // NOI18N

        newCategoryLabel.setFont(resourceMap.getFont("newCategoryLabel.font")); // NOI18N
        newCategoryLabel.setForeground(resourceMap.getColor("newCategoryLabel.foreground")); // NOI18N
        newCategoryLabel.setText(resourceMap.getString("newCategoryLabel.text")); // NOI18N
        newCategoryLabel.setName("newCategoryLabel"); // NOI18N

        currentCategoryLabel.setFont(resourceMap.getFont("currentCategoryLabel.font")); // NOI18N
        currentCategoryLabel.setForeground(resourceMap.getColor("currentCategoryLabel.foreground")); // NOI18N
        currentCategoryLabel.setText(resourceMap.getString("currentCategoryLabel.text")); // NOI18N
        currentCategoryLabel.setName("currentCategoryLabel"); // NOI18N

        newItemNameLabel.setFont(resourceMap.getFont("newItemNameLabel.font")); // NOI18N
        newItemNameLabel.setForeground(resourceMap.getColor("newItemNameLabel.foreground")); // NOI18N
        newItemNameLabel.setText(resourceMap.getString("newItemNameLabel.text")); // NOI18N
        newItemNameLabel.setName("newItemNameLabel"); // NOI18N

        currentStoreLabel.setFont(resourceMap.getFont("currentStoreLabel.font")); // NOI18N
        currentStoreLabel.setForeground(resourceMap.getColor("currentStoreLabel.foreground")); // NOI18N
        currentStoreLabel.setText(resourceMap.getString("currentStoreLabel.text")); // NOI18N
        currentStoreLabel.setName("currentStoreLabel"); // NOI18N

        newStoreLabel.setFont(resourceMap.getFont("newStoreLabel.font")); // NOI18N
        newStoreLabel.setForeground(resourceMap.getColor("newStoreLabel.foreground")); // NOI18N
        newStoreLabel.setText(resourceMap.getString("newStoreLabel.text")); // NOI18N
        newStoreLabel.setName("newStoreLabel"); // NOI18N

        currentImportanceLabel.setFont(resourceMap.getFont("currentImportanceLabel.font")); // NOI18N
        currentImportanceLabel.setForeground(resourceMap.getColor("currentImportanceLabel.foreground")); // NOI18N
        currentImportanceLabel.setText(resourceMap.getString("currentImportanceLabel.text")); // NOI18N
        currentImportanceLabel.setName("currentImportanceLabel"); // NOI18N

        currentItemLabelC.setFont(resourceMap.getFont("currentItemLabelC.font")); // NOI18N
        currentItemLabelC.setForeground(resourceMap.getColor("currentItemLabelC.foreground")); // NOI18N
        currentItemLabelC.setText(resourceMap.getString("currentItemLabelC.text")); // NOI18N
        currentItemLabelC.setName("currentItemLabelC"); // NOI18N

        currentCategoryLabelC.setFont(resourceMap.getFont("currentCategoryLabelC.font")); // NOI18N
        currentCategoryLabelC.setForeground(resourceMap.getColor("currentCategoryLabelC.foreground")); // NOI18N
        currentCategoryLabelC.setText(resourceMap.getString("currentCategoryLabelC.text")); // NOI18N
        currentCategoryLabelC.setName("currentCategoryLabelC"); // NOI18N

        currentStoreLabelC.setFont(resourceMap.getFont("currentStoreLabelC.font")); // NOI18N
        currentStoreLabelC.setForeground(resourceMap.getColor("currentStoreLabelC.foreground")); // NOI18N
        currentStoreLabelC.setText(resourceMap.getString("currentStoreLabelC.text")); // NOI18N
        currentStoreLabelC.setName("currentStoreLabelC"); // NOI18N

        currentImportanceLabelC.setFont(resourceMap.getFont("currentImportanceLabelC.font")); // NOI18N
        currentImportanceLabelC.setForeground(resourceMap.getColor("currentImportanceLabelC.foreground")); // NOI18N
        currentImportanceLabelC.setText(resourceMap.getString("currentImportanceLabelC.text")); // NOI18N
        currentImportanceLabelC.setName("currentImportanceLabelC"); // NOI18N

        newItemNameField.setFont(resourceMap.getFont("newItemNameField.font")); // NOI18N
        newItemNameField.setText(resourceMap.getString("newItemNameField.text")); // NOI18N
        newItemNameField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        newItemNameField.setName("newItemNameField"); // NOI18N

        newCategoryField.setFont(resourceMap.getFont("newCategoryField.font")); // NOI18N
        newCategoryField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        newCategoryField.setName("newCategoryField"); // NOI18N

        newStoreField.setFont(resourceMap.getFont("newStoreField.font")); // NOI18N
        newStoreField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        newStoreField.setName("newStoreField"); // NOI18N

        updateButton.setBackground(resourceMap.getColor("updateButton.background")); // NOI18N
        updateButton.setFont(resourceMap.getFont("updateButton.font")); // NOI18N
        updateButton.setForeground(resourceMap.getColor("updateButton.foreground")); // NOI18N
        updateButton.setText(resourceMap.getString("updateButton.text")); // NOI18N
        updateButton.setActionCommand(resourceMap.getString("updateButton.actionCommand")); // NOI18N
        updateButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), null));
        updateButton.setName("updateButton"); // NOI18N
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        cancelButton.setBackground(resourceMap.getColor("cancelButton.background")); // NOI18N
        cancelButton.setFont(resourceMap.getFont("cancelButton.font")); // NOI18N
        cancelButton.setForeground(resourceMap.getColor("cancelButton.foreground")); // NOI18N
        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setActionCommand(resourceMap.getString("cancelButton.actionCommand")); // NOI18N
        cancelButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), null));
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jRadioButton4.setBackground(resourceMap.getColor("jRadioButton4.background")); // NOI18N
        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setForeground(resourceMap.getColor("jRadioButton4.foreground")); // NOI18N
        jRadioButton4.setLabel(resourceMap.getString("jRadioButton4.label")); // NOI18N
        jRadioButton4.setName("jRadioButton4"); // NOI18N

        jRadioButton5.setBackground(resourceMap.getColor("jRadioButton5.background")); // NOI18N
        buttonGroup1.add(jRadioButton5);
        jRadioButton5.setForeground(resourceMap.getColor("jRadioButton5.foreground")); // NOI18N
        jRadioButton5.setText(resourceMap.getString("jRadioButton5.text")); // NOI18N
        jRadioButton5.setName("jRadioButton5"); // NOI18N

        jRadioButton6.setBackground(resourceMap.getColor("jRadioButton6.background")); // NOI18N
        buttonGroup1.add(jRadioButton6);
        jRadioButton6.setForeground(resourceMap.getColor("jRadioButton6.foreground")); // NOI18N
        jRadioButton6.setText(resourceMap.getString("jRadioButton6.text")); // NOI18N
        jRadioButton6.setName("jRadioButton6"); // NOI18N

        jRadioButton7.setBackground(resourceMap.getColor("jRadioButton7.background")); // NOI18N
        buttonGroup1.add(jRadioButton7);
        jRadioButton7.setForeground(resourceMap.getColor("jRadioButton7.foreground")); // NOI18N
        jRadioButton7.setText(resourceMap.getString("jRadioButton7.text")); // NOI18N
        jRadioButton7.setName("jRadioButton7"); // NOI18N

        jRadioButton8.setBackground(resourceMap.getColor("jRadioButton8.background")); // NOI18N
        buttonGroup1.add(jRadioButton8);
        jRadioButton8.setForeground(resourceMap.getColor("jRadioButton8.foreground")); // NOI18N
        jRadioButton8.setLabel(resourceMap.getString("jRadioButton8.label")); // NOI18N
        jRadioButton8.setName("jRadioButton8"); // NOI18N

        jLabel1.setForeground(resourceMap.getColor("jLabel1.foreground")); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setForeground(resourceMap.getColor("jLabel2.foreground")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jRadioButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton5)))
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton4)
                    .addComponent(jRadioButton5)
                    .addComponent(jRadioButton6)
                    .addComponent(jRadioButton7)
                    .addComponent(jRadioButton8)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout editItemPanelLayout = new javax.swing.GroupLayout(editItemPanel);
        editItemPanel.setLayout(editItemPanelLayout);
        editItemPanelLayout.setHorizontalGroup(
            editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editItemPanelLayout.createSequentialGroup()
                .addGroup(editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editItemPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(editItemLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE))
                    .addGroup(editItemPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(newItemNameLabel)
                            .addComponent(currentItemNameLabel)
                            .addComponent(currentCategoryLabel)
                            .addComponent(newCategoryLabel)
                            .addComponent(currentStoreLabel)
                            .addComponent(newStoreLabel)
                            .addComponent(currentImportanceLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(newStoreField)
                            .addComponent(newCategoryField)
                            .addComponent(currentImportanceLabelC, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                            .addComponent(currentStoreLabelC, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                            .addComponent(currentItemLabelC, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                            .addComponent(currentCategoryLabelC, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                            .addComponent(newItemNameField)))
                    .addGroup(editItemPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        editItemPanelLayout.setVerticalGroup(
            editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editItemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editItemLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentItemNameLabel)
                    .addComponent(currentItemLabelC))
                .addGap(18, 18, 18)
                .addGroup(editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newItemNameLabel)
                    .addComponent(newItemNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentCategoryLabel)
                    .addComponent(currentCategoryLabelC))
                .addGap(18, 18, 18)
                .addGroup(editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newCategoryLabel)
                    .addComponent(newCategoryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentStoreLabel)
                    .addComponent(currentStoreLabelC))
                .addGap(18, 18, 18)
                .addGroup(editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newStoreLabel)
                    .addComponent(newStoreField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentImportanceLabelC)
                    .addComponent(currentImportanceLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(editItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editItemPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editItemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-344)/2, (screenSize.height-514)/2, 344, 514);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        if(evt.getSource() == cancelButton)
  		{
			new itemListView(user, filename, mDBApi);
  			setVisible(false);
  			dispose();
  		}
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed

        String name = Global.toFileName(newItemNameField.getText());
        String category = Global.toFileName(newCategoryField.getText());
        String store = Global.toFileName(newStoreField.getText());
        //String importance = newImportanceField.;
        boolean isChecked = item.checkbox.isSelected();

        String list = Global.getFile(mDBApi, "/" + user + "/" + Global.toFileName(filename) + ".txt");
        String checkNameList = list;
        StringTokenizer st2 = new StringTokenizer(checkNameList);
        int count = 0;
        while(st2.hasMoreTokens())
        {
                String nameToken = st2.nextToken();
                st2.nextToken();
                st2.nextToken();
                st2.nextToken();
                st2.nextToken();
                if(nameToken.equals(name))
                        count++;
        }
        if(count > 1)
                JOptionPane.showMessageDialog(this, "New item name is taken.");   
        else
        {
            String newList = "";
            StringTokenizer st = new StringTokenizer(list);	
            while(st.hasMoreTokens())
            {
                    String nameToken = st.nextToken();
                    String categoryToken = st.nextToken();
                    String storeToken = st.nextToken();
                    String importanceToken = st.nextToken();
                    String checkToken = st.nextToken();
                    if(nameToken.equals(originalName))
                    {
                        if(!newItemNameField.getText().equals(""))
                        {
                            newList += name + "\t";
                        }
                        else
                        {
                            newList += currentItemLabelC.getText() + "\t";
                        }
                        if(!newCategoryField.getText().equals(""))
                        {
                            newList += category + "\t";
                        }
                        else
                        {
                            newList += currentCategoryLabelC.getText() + "\t";
                        }
                        if(!newStoreField.getText().equals(""))
                        {
                            newList += store + "\t";
                        }
                        else
                        {
                            newList += currentStoreLabelC.getText() + "\t";
                        }
                        newList += getSelection() + "\t";
                        newList += checkToken + "\n";
                    }
                    else
                    {
                            newList += nameToken + "\t";
                            newList += categoryToken + "\t";
                            newList += storeToken + "\t";
                            newList += importanceToken + "\t";
                            newList += checkToken + "\n";
                    }
            }
            Global.putFileOverwrite(mDBApi, "/" + user + "/" + Global.toFileName(filename) + ".txt", newList);

            new itemListView(user, filename, mDBApi);
            setVisible(false);
            dispose();
        }    
    }//GEN-LAST:event_updateButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel currentCategoryLabel;
    private javax.swing.JLabel currentCategoryLabelC;
    private javax.swing.JLabel currentImportanceLabel;
    private javax.swing.JLabel currentImportanceLabelC;
    private javax.swing.JLabel currentItemLabelC;
    private javax.swing.JLabel currentItemNameLabel;
    private javax.swing.JLabel currentStoreLabel;
    private javax.swing.JLabel currentStoreLabelC;
    public javax.swing.JLabel editItemLabel;
    private javax.swing.JPanel editItemPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JTextField newCategoryField;
    private javax.swing.JLabel newCategoryLabel;
    private javax.swing.JTextField newItemNameField;
    private javax.swing.JLabel newItemNameLabel;
    private javax.swing.JTextField newStoreField;
    private javax.swing.JLabel newStoreLabel;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
       //throw new UnsupportedOperationException("Not supported yet.");
    }                                            
    
}
