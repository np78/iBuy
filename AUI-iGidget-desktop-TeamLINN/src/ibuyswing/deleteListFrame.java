/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * deleteListFrame.java
 *
 * Created on Apr 15, 2012, 12:38:36 AM
 */
package ibuyswing;

import java.util.LinkedList;
import java.util.StringTokenizer;

import javax.swing.JButton;
import java.awt.ScrollPane;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.GridLayout;
import javax.swing.JOptionPane;

import com.dropbox.client2.DropboxAPI;
import com.dropbox.client2.exception.DropboxException;
import com.dropbox.client2.session.AccessTokenPair;
import com.dropbox.client2.session.AppKeyPair;
import com.dropbox.client2.session.WebAuthSession;
import javax.swing.JOptionPane;

/**
 *
 * @author Luke
 */

public class deleteListFrame extends javax.swing.JFrame implements ActionListener {

    private static DropboxAPI<WebAuthSession> mDBApi;
    private LinkedList<JButton> list = new LinkedList<JButton>();
    private static String user;
    
    /** Creates new form deleteListFrame */
    public deleteListFrame(String user, DropboxAPI<WebAuthSession> mDBApi) {
        
        super("iBuy - Delete List");
        this.user = user;
	this.mDBApi = mDBApi;
        initComponents();
        getButtonList();
        setVisible(true);
    }
        private void getButtonList(){
   		
		//Reads users list of lists
		list.clear();
	    StringTokenizer st = new StringTokenizer(Global.getFile(mDBApi, "/"+user+"/lists.txt"));
		while(st.hasMoreTokens())
		{
			JButton jListsButtons = new JButton(Global.readFileName(st.nextToken()));
                        jListsButtons.setBackground(new java.awt.Color(102, 102, 102));
                        jListsButtons.setFont(new java.awt.Font("Tahoma 18", 1, 18));
                        jListsButtons.setForeground(new java.awt.Color(255,255,255));
                        jListsButtons.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), null));
                        
			st.nextToken();
			st.nextToken();
			jListsButtons.addActionListener(this);
			list.add(jListsButtons);
		}
		listPanel.setLayout(new GridLayout(list.size(),1));
		for(int i = 0; i < list.size(); i++)
		{
		    listPanel.add(list.get(i));
		}
        
        
	    listScrollPane.doLayout();
           setVisible(true);
    
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        deleteListPanel = new javax.swing.JPanel();
        deleteListLabel = new javax.swing.JLabel();
        cancelListButton = new javax.swing.JButton();
        listScrollPane = new javax.swing.JScrollPane();
        listPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(deleteListFrame.class);
        deleteListPanel.setBackground(resourceMap.getColor("deleteListPanel.background")); // NOI18N
        deleteListPanel.setName("deleteListPanel"); // NOI18N

        deleteListLabel.setFont(resourceMap.getFont("deleteListLabel.font")); // NOI18N
        deleteListLabel.setForeground(resourceMap.getColor("deleteListLabel.foreground")); // NOI18N
        deleteListLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deleteListLabel.setText(resourceMap.getString("deleteListLabel.text")); // NOI18N
        deleteListLabel.setToolTipText(resourceMap.getString("deleteListLabel.toolTipText")); // NOI18N
        deleteListLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deleteListLabel.setName("deleteListLabel"); // NOI18N

        cancelListButton.setBackground(resourceMap.getColor("cancelListButton.background")); // NOI18N
        cancelListButton.setFont(resourceMap.getFont("cancelListButton.font")); // NOI18N
        cancelListButton.setForeground(resourceMap.getColor("cancelListButton.foreground")); // NOI18N
        cancelListButton.setText(resourceMap.getString("cancelListButton.text")); // NOI18N
        cancelListButton.setActionCommand(resourceMap.getString("cancelListButton.actionCommand")); // NOI18N
        cancelListButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), null));
        cancelListButton.setName("cancelListButton"); // NOI18N
        cancelListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelListButtonActionPerformed(evt);
            }
        });

        listScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        listScrollPane.setToolTipText(resourceMap.getString("listScrollPane.toolTipText")); // NOI18N
        listScrollPane.setName("listScrollPane"); // NOI18N

        listPanel.setBackground(resourceMap.getColor("listPanel.background")); // NOI18N
        listPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, resourceMap.getColor("listPanel.border.highlightOuterColor"), resourceMap.getColor("listPanel.border.highlightInnerColor"), resourceMap.getColor("listPanel.border.shadowOuterColor"), resourceMap.getColor("listPanel.border.shadowInnerColor"))); // NOI18N
        listPanel.setToolTipText(resourceMap.getString("listPanel.toolTipText")); // NOI18N
        listPanel.setName("listPanel"); // NOI18N

        javax.swing.GroupLayout listPanelLayout = new javax.swing.GroupLayout(listPanel);
        listPanel.setLayout(listPanelLayout);
        listPanelLayout.setHorizontalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 187, Short.MAX_VALUE)
        );
        listPanelLayout.setVerticalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 101, Short.MAX_VALUE)
        );

        listScrollPane.setViewportView(listPanel);

        javax.swing.GroupLayout deleteListPanelLayout = new javax.swing.GroupLayout(deleteListPanel);
        deleteListPanel.setLayout(deleteListPanelLayout);
        deleteListPanelLayout.setHorizontalGroup(
            deleteListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteListPanelLayout.createSequentialGroup()
                .addGroup(deleteListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deleteListPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(deleteListLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE))
                    .addGroup(deleteListPanelLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(listScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteListPanelLayout.createSequentialGroup()
                .addContainerGap(95, Short.MAX_VALUE)
                .addComponent(cancelListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93))
        );
        deleteListPanelLayout.setVerticalGroup(
            deleteListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deleteListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(deleteListPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(deleteListPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-345)/2, (screenSize.height-289)/2, 345, 289);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelListButtonActionPerformed
        // TODO add your handling code here:
        if(evt.getSource() == cancelListButton)
		{  
                        new mainMenuFrame(user, mDBApi);
                        setVisible(false);            
                        dispose();                      
		}
    }//GEN-LAST:event_cancelListButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelListButton;
    private javax.swing.JLabel deleteListLabel;
    private javax.swing.JPanel deleteListPanel;
    private javax.swing.JPanel listPanel;
    private javax.swing.JScrollPane listScrollPane;
    // End of variables declaration//GEN-END:variables

    public void actionPerformed(ActionEvent e) {
            for(int i = 0; i < list.size(); i++)
		{
			if(e.getSource() == list.get(i))
			{
                            int select = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete \"" + list.get(i).getText() + "\" ?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
                            if(select == JOptionPane.YES_OPTION)
                            {
                            //Delete file
				Global.delete(mDBApi, "/" + user + "/" + Global.toFileName(list.get(i).getText()) + ".txt");
				StringTokenizer st = new StringTokenizer(Global.getFile(mDBApi, "/" + user + "/lists.txt"));
				String newList = "";
				//Finds filename in list and removes it
				while(st.hasMoreTokens())
				{
					String token = st.nextToken();
					if(!token.equals(Global.toFileName(list.get(i).getText())))
						newList += token + "\t" + st.nextToken() + "\t" + st.nextToken() + "\n";
					else
					{
						st.nextToken();
						st.nextToken();
					}
				}
				Global.putFileOverwrite(mDBApi, "/" + user + "/lists.txt", newList);
				
				//"Refreshes" window
				new mainMenuFrame(user, mDBApi);
                                getButtonList();
				setVisible(false);
				dispose();
                            }
			}
		}
	}
    }

