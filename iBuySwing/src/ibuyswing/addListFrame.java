/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * addListFrame.java
 *
 * Created on Apr 14, 2012, 11:33:02 PM
 */
package ibuyswing;

import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Date;
import java.util.StringTokenizer;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JTextField;

import com.dropbox.client2.DropboxAPI;
import com.dropbox.client2.session.WebAuthSession;
/**
 *
 * @author Luke
 */
public class addListFrame extends javax.swing.JFrame {

    private static DropboxAPI<WebAuthSession> mDBApi;
    private static String user;
    
    /** Creates new form addListFrame */
    public addListFrame(String user, DropboxAPI<WebAuthSession> mDBApi){
	super("iBuy - New List");
	this.user = user;
	this.mDBApi = mDBApi;
        initComponents();
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addListPanel = new javax.swing.JPanel();
        newListLabel = new javax.swing.JLabel();
        cancelListButton = new javax.swing.JButton();
        addListButton = new javax.swing.JButton();
        newListTextField = new javax.swing.JTextField();
        listNameLabel = new javax.swing.JLabel();
        instructionLabel = new javax.swing.JLabel();
        newListFeedBackLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(addListFrame.class);
        addListPanel.setBackground(resourceMap.getColor("addListPanel.background")); // NOI18N
        addListPanel.setName("addListPanel"); // NOI18N

        newListLabel.setFont(resourceMap.getFont("newListLabel.font")); // NOI18N
        newListLabel.setForeground(resourceMap.getColor("newListLabel.foreground")); // NOI18N
        newListLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newListLabel.setText(resourceMap.getString("newListLabel.text")); // NOI18N
        newListLabel.setName("newListLabel"); // NOI18N

        cancelListButton.setBackground(resourceMap.getColor("cancelListButton.background")); // NOI18N
        cancelListButton.setFont(resourceMap.getFont("cancelListButton.font")); // NOI18N
        cancelListButton.setForeground(resourceMap.getColor("cancelListButton.foreground")); // NOI18N
        cancelListButton.setText(resourceMap.getString("cancelListButton.text")); // NOI18N
        cancelListButton.setActionCommand(resourceMap.getString("cancelListButton.actionCommand")); // NOI18N
        cancelListButton.setName("cancelListButton"); // NOI18N
        cancelListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelListButtonActionPerformed(evt);
            }
        });

        addListButton.setBackground(resourceMap.getColor("addListButton.background")); // NOI18N
        addListButton.setFont(resourceMap.getFont("addListButton.font")); // NOI18N
        addListButton.setForeground(resourceMap.getColor("addListButton.foreground")); // NOI18N
        addListButton.setText(resourceMap.getString("addListButton.text")); // NOI18N
        addListButton.setActionCommand(resourceMap.getString("addListButton.actionCommand")); // NOI18N
        addListButton.setName("addListButton"); // NOI18N
        addListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addListButtonActionPerformed(evt);
            }
        });

        newListTextField.setFont(resourceMap.getFont("newListTextField.font")); // NOI18N
        newListTextField.setText(resourceMap.getString("newListTextField.text")); // NOI18N
        newListTextField.setName("newListTextField"); // NOI18N

        listNameLabel.setFont(resourceMap.getFont("listNameLabel.font")); // NOI18N
        listNameLabel.setForeground(resourceMap.getColor("listNameLabel.foreground")); // NOI18N
        listNameLabel.setText(resourceMap.getString("listNameLabel.text")); // NOI18N
        listNameLabel.setName("listNameLabel"); // NOI18N

        instructionLabel.setFont(resourceMap.getFont("instructionLabel.font")); // NOI18N
        instructionLabel.setForeground(resourceMap.getColor("instructionLabel.foreground")); // NOI18N
        instructionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        instructionLabel.setText(resourceMap.getString("instructionLabel.text")); // NOI18N
        instructionLabel.setName("instructionLabel"); // NOI18N

        newListFeedBackLabel.setFont(resourceMap.getFont("newListFeedBackLabel.font")); // NOI18N
        newListFeedBackLabel.setForeground(resourceMap.getColor("newListFeedBackLabel.foreground")); // NOI18N
        newListFeedBackLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newListFeedBackLabel.setText(resourceMap.getString("newListFeedBackLabel.text")); // NOI18N
        newListFeedBackLabel.setName("newListFeedBackLabel"); // NOI18N

        javax.swing.GroupLayout addListPanelLayout = new javax.swing.GroupLayout(addListPanel);
        addListPanel.setLayout(addListPanelLayout);
        addListPanelLayout.setHorizontalGroup(
            addListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addListPanelLayout.createSequentialGroup()
                        .addGroup(addListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newListLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                            .addGroup(addListPanelLayout.createSequentialGroup()
                                .addComponent(addListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                                .addComponent(cancelListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addListPanelLayout.createSequentialGroup()
                        .addComponent(listNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(newListTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))))
            .addGroup(addListPanelLayout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(instructionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(84, Short.MAX_VALUE))
            .addGroup(addListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newListFeedBackLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                .addContainerGap())
        );
        addListPanelLayout.setVerticalGroup(
            addListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(instructionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newListFeedBackLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(addListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listNameLabel)
                    .addComponent(newListTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addListPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addListPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-346)/2, (screenSize.height-266)/2, 346, 266);
    }// </editor-fold>//GEN-END:initComponents

    private void addListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addListButtonActionPerformed
        // TODO add your handling code here:
		if(evt.getSource() == addListButton)
  		{
			addList();
                        new mainMenuFrame(user, mDBApi);
                        setVisible(false);
                        dispose();
  		}
    }//GEN-LAST:event_addListButtonActionPerformed

    private void cancelListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelListButtonActionPerformed
        // TODO add your handling code here:
        if(evt.getSource() == cancelListButton)
  		{
			new mainMenuFrame(user, mDBApi);
  			setVisible(false);
  			dispose();
  		}
    }//GEN-LAST:event_cancelListButtonActionPerformed
    public void addList()
	{
		String listName = newListTextField.getText();
		if(listName.equals(""))
			newListFeedBackLabel.setText("Please Give List a Name");
		else
		{
			String listFile = Global.getFile(mDBApi, "/" + user + "/lists.txt");
			StringTokenizer st = new StringTokenizer(listFile);
            boolean isTaken = false;
            while(st.hasMoreTokens())
            {
            	if(st.nextToken().equals(Global.toFileName(listName)))
            	{
            		isTaken = true;
            		break;
            	}
            	st.nextToken();
            	st.nextToken();
            }
            if(isTaken)
            {
            	newListFeedBackLabel.setText("List name already in use.");
            }
            else
            {
            	//Adds list to users list collection
            	listName = Global.toFileName(listName);
            	Date d = new Date(System.currentTimeMillis());
            	listFile += listName + "\t0.00\t" + Global.toFileName(d.toString()) + "\n";
            	Global.putFileOverwrite(mDBApi, "/" + user + "/lists.txt", listFile);
	        	
	        	//Creates new list
	        	Global.putFile(mDBApi, "/" + user + "/" + listName + ".txt", "");

	        	//Redirects to Main Menu
	        	//new MainMenu(user, mDBApi);
			//setVisible(false);
	        	dispose();
            }
	}
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addListButton;
    private javax.swing.JPanel addListPanel;
    private javax.swing.JButton cancelListButton;
    private javax.swing.JLabel instructionLabel;
    private javax.swing.JLabel listNameLabel;
    private javax.swing.JLabel newListFeedBackLabel;
    private javax.swing.JLabel newListLabel;
    private javax.swing.JTextField newListTextField;
    // End of variables declaration//GEN-END:variables
}
