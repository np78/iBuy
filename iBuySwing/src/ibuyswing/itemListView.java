/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * itemListView.java
 *
 * Created on Apr 16, 2012, 1:55:23 PM
 */
package ibuyswing;

import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.ByteArrayOutputStream;
import java.util.LinkedList;
import java.util.StringTokenizer;

import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;

import com.dropbox.client2.DropboxAPI;
import com.dropbox.client2.DropboxAPI.DropboxFileInfo;
import com.dropbox.client2.exception.DropboxException;
import com.dropbox.client2.session.AccessTokenPair;
import com.dropbox.client2.session.AppKeyPair;
import com.dropbox.client2.session.WebAuthSession;
/**
 *
 * @author Luke
 */
public class itemListView extends javax.swing.JFrame implements ActionListener{

        private DropboxAPI<WebAuthSession> mDBApi;
	private LinkedList<Item> items = new LinkedList<Item>();
	private LinkedList<JButton> settings = new LinkedList<JButton>();
	private String user, filename;
        
    /** Creates new form itemListView */
    public itemListView(String user, String filename, DropboxAPI<WebAuthSession> mDBApi) {
        
                super(filename);
		this.user = user;
		this.filename = filename;
		this.mDBApi = mDBApi;
                
                 initComponents();
                 getItemList();
                 setVisible(true);
                 listIdentifierLabel.setText("List: " + filename);
                
    }
    
    public void getItemList(){
        
        StringTokenizer st = new StringTokenizer(Global.getFile(mDBApi, "/" + user + "/" + Global.toFileName(filename) + ".txt"));
		items.clear();
		settings.clear();
		while(st.hasMoreTokens())
		{
			String str[] = new String[5];
			str[0] = Global.readFileName(st.nextToken());
			str[1] = Global.readFileName(st.nextToken());
			str[2] = Global.readFileName(st.nextToken());
			str[3] = Global.readFileName(st.nextToken());
			str[4] = Global.readFileName(st.nextToken());
			int importance = str[3].charAt(0) - 48;  
			boolean isChecked = false;
			if(str[4].equals("true"))
				isChecked = true;
			Item item = new Item(str[0], str[1], str[2], importance, isChecked);
			items.add(item);
			JButton set = new JButton("Settings");
			set.addActionListener(this);
			settings.add(set);
                        itemListPanel.setLayout(new GridLayout(items.size(),8));
                       
                        for(int i = 0; i < items.size(); i++)
                        {
                            items.get(i);
                            itemListPanel.add(item.checkbox);
                            itemListPanel.add(item.nameField);
                            itemListPanel.add(item.categoryField);
                            itemListPanel.add(item.storeField);
                            itemListPanel.add(item.importanceField);
                            itemListPanel.add(settings.get(i));
                        }
		}
                
                itemScrollPane.doLayout();
                setVisible(true);
    }
    
    
    public void settingButtonActionPerformed(ActionEvent e) {
        System.out.println("settings pressed");
        for(int i = 0; i < settings.size(); i++)
		{
			if(e.getSource() == settings.get(i))
			{
                            System.out.println("this is right");
				new editItemFrame(user, filename, items.get(i), mDBApi);
				setVisible(false);
				dispose();
			}
		}
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        listViewPanel = new javax.swing.JPanel();
        refreshButton = new javax.swing.JButton();
        changeListNameButton = new javax.swing.JButton();
        searchByNameButton = new javax.swing.JButton();
        removeItemButton = new javax.swing.JButton();
        searchTextField = new javax.swing.JTextField();
        crossOffSortButton = new javax.swing.JButton();
        nameSortButton = new javax.swing.JButton();
        categorySortButton = new javax.swing.JButton();
        storeSortButton = new javax.swing.JButton();
        importanceSortButton = new javax.swing.JButton();
        logOutButton2 = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();
        listIdentifierLabel = new javax.swing.JLabel();
        itemScrollPane = new javax.swing.JScrollPane();
        itemListPanel = new javax.swing.JPanel();
        addItemButton = new javax.swing.JButton();
        sortByLabel = new javax.swing.JLabel();

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listViewPanel.setBackground(new java.awt.Color(51, 51, 51));
        listViewPanel.setName("listViewPanel"); // NOI18N

        refreshButton.setBackground(new java.awt.Color(102, 102, 102));
        refreshButton.setFont(new java.awt.Font("Tahoma", 1, 18));
        refreshButton.setForeground(new java.awt.Color(255, 255, 255));
        refreshButton.setText("Refresh");
        refreshButton.setName("refreshButton"); // NOI18N
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        changeListNameButton.setBackground(new java.awt.Color(102, 102, 102));
        changeListNameButton.setFont(new java.awt.Font("Tahoma", 1, 18));
        changeListNameButton.setForeground(new java.awt.Color(255, 255, 255));
        changeListNameButton.setText("change List name");
        changeListNameButton.setName("changeListNameButton"); // NOI18N
        changeListNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeListNameButtonActionPerformed(evt);
            }
        });

        searchByNameButton.setBackground(new java.awt.Color(102, 102, 102));
        searchByNameButton.setFont(new java.awt.Font("Tahoma", 1, 18));
        searchByNameButton.setForeground(new java.awt.Color(255, 255, 255));
        searchByNameButton.setText("search By name");
        searchByNameButton.setName("searchByNameButton"); // NOI18N
        searchByNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByNameButtonActionPerformed(evt);
            }
        });

        removeItemButton.setBackground(new java.awt.Color(102, 102, 102));
        removeItemButton.setFont(new java.awt.Font("Tahoma", 1, 18));
        removeItemButton.setForeground(new java.awt.Color(255, 255, 255));
        removeItemButton.setText("Remove Item");
        removeItemButton.setName("removeItemButton"); // NOI18N
        removeItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeItemButtonActionPerformed(evt);
            }
        });

        searchTextField.setName("searchTextField"); // NOI18N

        crossOffSortButton.setText("Cross off");
        crossOffSortButton.setName("crossOffSortButton"); // NOI18N
        crossOffSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crossOffSortButtonActionPerformed(evt);
            }
        });

        nameSortButton.setText("Name");
        nameSortButton.setName("nameSortButton"); // NOI18N
        nameSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameSortButtonActionPerformed(evt);
            }
        });

        categorySortButton.setText("Category");
        categorySortButton.setName("categorySortButton"); // NOI18N
        categorySortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categorySortButtonActionPerformed(evt);
            }
        });

        storeSortButton.setText("Store");
        storeSortButton.setName("storeSortButton"); // NOI18N
        storeSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeSortButtonActionPerformed(evt);
            }
        });

        importanceSortButton.setText("Importance");
        importanceSortButton.setName("importanceSortButton"); // NOI18N
        importanceSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importanceSortButtonActionPerformed(evt);
            }
        });

        logOutButton2.setBackground(new java.awt.Color(102, 102, 102));
        logOutButton2.setFont(new java.awt.Font("Tahoma", 1, 18));
        logOutButton2.setForeground(new java.awt.Color(255, 255, 255));
        logOutButton2.setText("log out");
        logOutButton2.setName("logOutButton2"); // NOI18N
        logOutButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButton2ActionPerformed(evt);
            }
        });

        BackButton.setBackground(new java.awt.Color(102, 102, 102));
        BackButton.setFont(new java.awt.Font("Tahoma", 1, 18));
        BackButton.setForeground(new java.awt.Color(255, 255, 255));
        BackButton.setText("Back");
        BackButton.setName("BackButton"); // NOI18N
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        listIdentifierLabel.setBackground(new java.awt.Color(51, 51, 51));
        listIdentifierLabel.setFont(new java.awt.Font("Tahoma", 1, 36));
        listIdentifierLabel.setForeground(new java.awt.Color(255, 153, 0));
        listIdentifierLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        listIdentifierLabel.setName("listIdentifierLabel"); // NOI18N

        itemScrollPane.setName("itemScrollPane"); // NOI18N

        itemListPanel.setName("itemListPanel"); // NOI18N

        javax.swing.GroupLayout itemListPanelLayout = new javax.swing.GroupLayout(itemListPanel);
        itemListPanel.setLayout(itemListPanelLayout);
        itemListPanelLayout.setHorizontalGroup(
            itemListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 614, Short.MAX_VALUE)
        );
        itemListPanelLayout.setVerticalGroup(
            itemListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 141, Short.MAX_VALUE)
        );

        itemScrollPane.setViewportView(itemListPanel);

        addItemButton.setBackground(new java.awt.Color(102, 102, 102));
        addItemButton.setFont(new java.awt.Font("Tahoma", 1, 18));
        addItemButton.setForeground(new java.awt.Color(255, 255, 255));
        addItemButton.setText("Add Item");
        addItemButton.setName("addItemButton"); // NOI18N
        addItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemButtonActionPerformed(evt);
            }
        });

        sortByLabel.setBackground(new java.awt.Color(102, 102, 102));
        sortByLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        sortByLabel.setForeground(new java.awt.Color(255, 255, 255));
        sortByLabel.setText("Sort By:");
        sortByLabel.setName("sortByLabel"); // NOI18N

        javax.swing.GroupLayout listViewPanelLayout = new javax.swing.GroupLayout(listViewPanel);
        listViewPanel.setLayout(listViewPanelLayout);
        listViewPanelLayout.setHorizontalGroup(
            listViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listViewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(listViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listIdentifierLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listViewPanelLayout.createSequentialGroup()
                        .addComponent(BackButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 194, Short.MAX_VALUE)
                        .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(145, 145, 145)
                        .addComponent(logOutButton2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listViewPanelLayout.createSequentialGroup()
                        .addGroup(listViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(listViewPanelLayout.createSequentialGroup()
                                .addComponent(searchByNameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(listViewPanelLayout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(changeListNameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(128, 128, 128))
                    .addComponent(itemScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
                    .addComponent(sortByLabel)
                    .addGroup(listViewPanelLayout.createSequentialGroup()
                        .addComponent(removeItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 312, Short.MAX_VALUE)
                        .addComponent(addItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(listViewPanelLayout.createSequentialGroup()
                        .addComponent(crossOffSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(categorySortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(storeSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(importanceSortButton)))
                .addContainerGap())
        );
        listViewPanelLayout.setVerticalGroup(
            listViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listViewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listIdentifierLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sortByLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(listViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crossOffSortButton)
                    .addComponent(importanceSortButton)
                    .addComponent(storeSortButton)
                    .addComponent(categorySortButton)
                    .addComponent(nameSortButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(itemScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(listViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(listViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchByNameButton)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(changeListNameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(listViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logOutButton2)
                    .addComponent(BackButton)
                    .addComponent(refreshButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 653, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(listViewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 462, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(listViewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-669)/2, (screenSize.height-500)/2, 669, 500);
    }// </editor-fold>//GEN-END:initComponents

    private void logOutButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButton2ActionPerformed

        if (evt.getSource() == logOutButton2) {             System.exit(0);         }     }//GEN-LAST:event_logOutButton2ActionPerformed

    private void changeListNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeListNameButtonActionPerformed
        if (evt.getSource() == changeListNameButton) {            
            new changeListName(user, filename, mDBApi);             
            setVisible(true);             
        }
    }//GEN-LAST:event_changeListNameButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        if(evt.getSource() == refreshButton)
  		{
  			new itemListView(user, filename, mDBApi);
  			setVisible(false);
  			dispose();
  		}
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void crossOffSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crossOffSortButtonActionPerformed
        if(evt.getSource() == crossOffSortButton)
		{
			nameSort();
			LinkedList<Item> temp = new LinkedList<Item>();
  			for(int i = 0; i < items.size(); i++)
  			{
  				if(!items.get(i).isChecked)
				{
  					temp.add(items.get(i));
				}
  			}
  			for(int j = 0; j < items.size(); j++)
			{
  				if(items.get(j).isChecked)
				{
  					temp.add(items.get(j));
				}
			}
  			items = temp;
  			writeListToDropbox();
			new itemListView(user, filename, mDBApi);
  			setVisible(false);
  			dispose();
		}
    }//GEN-LAST:event_crossOffSortButtonActionPerformed

    private void importanceSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importanceSortButtonActionPerformed
        if(evt.getSource() == importanceSortButton)
  		{
			Item temp;
			JButton temp2;
  			for(int i = 0; i < items.size(); i++)
  			{
  				for(int j = 1; j < items.size()-i; j++)
  				{
  					if(items.get(j-1).importance > items.get(j).importance)
  					{
  						temp = items.get(j-1);
  						items.set(j-1, items.get(j));
  						items.set(j, temp);
  						
  						temp2 = settings.get(j-1);
  						settings.set(j-1, settings.get(j));
  						settings.set(j, temp2);
  					}
  				}
  			}
  			writeListToDropbox();
			new itemListView(user, filename, mDBApi);
  			setVisible(false);
  			dispose();
  		}
    }//GEN-LAST:event_importanceSortButtonActionPerformed

    private void nameSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameSortButtonActionPerformed
        if(evt.getSource() == nameSortButton)
  		{
			nameSort();
			writeListToDropbox();
			new itemListView(user, filename, mDBApi);
  			setVisible(false);
  			dispose();
  		}
    }//GEN-LAST:event_nameSortButtonActionPerformed

    private void storeSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeSortButtonActionPerformed
        if(evt.getSource() == storeSortButton)
  		{
			Item temp;
			JButton temp2;
  			for(int i = 0; i < items.size(); i++)
  			{
  				for(int j = 1; j < items.size()-i; j++)
  				{
  					if(items.get(j-1).store.compareTo(items.get(j).store) > 0)
  					{
  						temp = items.get(j-1);
  						items.set(j-1, items.get(j));
  						items.set(j, temp);
  						
  						temp2 = settings.get(j-1);
  						settings.set(j-1, settings.get(j));
  						settings.set(j, temp2);
  					}
  				}
  			}
  			writeListToDropbox();
			new itemListView(user, filename, mDBApi);
  			setVisible(false);
  			dispose();
  		}
    }//GEN-LAST:event_storeSortButtonActionPerformed

    private void categorySortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categorySortButtonActionPerformed
        if(evt.getSource() == categorySortButton)
  		{
			Item temp;
			JButton temp2;
  			for(int i = 0; i < items.size(); i++)
  			{
  				for(int j = 1; j < items.size()-i; j++)
  				{
  					if(items.get(j-1).category.compareTo(items.get(j).category) > 0)
  					{
  						temp = items.get(j-1);
  						items.set(j-1, items.get(j));
  						items.set(j, temp);
  						
  						temp2 = settings.get(j-1);
  						settings.set(j-1, settings.get(j));
  						settings.set(j, temp2);
  					}
  				}
  			}
  			writeListToDropbox();
			new itemListView(user, filename, mDBApi);
  			setVisible(false);
  			dispose();
  		}
    }//GEN-LAST:event_categorySortButtonActionPerformed

    private void removeItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeItemButtonActionPerformed
        if(evt.getSource() == removeItemButton)
  		{
  			//new RemoveItem(user, filename, mDBApi);
  			setVisible(true);
  		}
    }//GEN-LAST:event_removeItemButtonActionPerformed

    private void searchByNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByNameButtonActionPerformed
        if(evt.getSource() == searchByNameButton && (!searchTextField.getText().equals("")))
  		{
			boolean isFound = false;
			for(int i = 0; i < items.size(); i++)
			{
				if(items.get(i).name.compareTo(searchTextField.getText()) == 0)
				{
					items.addFirst(items.remove(i));
					isFound = true;
					break;
				}
			}
			if(isFound)
			{
				System.out.println("Item Found");
				writeListToDropbox();
				new itemListView(user, filename, mDBApi);
	  			setVisible(false);
	  			dispose();
			}
			else
				System.out.println("Item NOT Found");
  		}
		for(int i = 0; i < settings.size(); i++)
		{
			if(evt.getSource() == settings.get(i))
			{
				new editItemFrame(user, filename, items.get(i), mDBApi);
				setVisible(false);
				dispose();
			}
		}
	
    }//GEN-LAST:event_searchByNameButtonActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        if(evt.getSource() == BackButton){
            new mainMenuFrame(user, mDBApi);
            setVisible(false);
            dispose();
            
        }
    }//GEN-LAST:event_BackButtonActionPerformed

    private void addItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemButtonActionPerformed
        if(evt.getSource() == addItemButton)
  		{
  			new addItemFrame(user, filename, mDBApi);
  			setVisible(true);
  		}
    }//GEN-LAST:event_addItemButtonActionPerformed

    public void nameSort()
	{
		Item temp;
		JButton temp2;
		for(int i = 0; i < items.size(); i++)
		{
			for(int j = 1; j < items.size()-i; j++)
			{
				if(items.get(j-1).name.compareTo(items.get(j).name) > 0)
				{
					temp = items.get(j-1);
					items.set(j-1, items.get(j));
					items.set(j, temp);
					
					temp2 = settings.get(j-1);
					settings.set(j-1, settings.get(j));
					settings.set(j, temp2);
				}
			}
		}
	}
    public void writeListToDropbox()
	{
		String newList = "";
		for(int i = 0; i < items.size(); i++)
		{
			newList += Global.toFileName(items.get(i).name) + "\t";
			newList += Global.toFileName(items.get(i).category) + "\t";
			newList += Global.toFileName(items.get(i).store) + "\t";
			newList += items.get(i).importance + "\t";
			newList += items.get(i).isChecked + "\n";
		}
		Global.putFileOverwrite(mDBApi, "/" + user + "/" + Global.toFileName(filename) + ".txt", newList);
	}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton addItemButton;
    private javax.swing.JButton categorySortButton;
    private javax.swing.JButton changeListNameButton;
    private javax.swing.JButton crossOffSortButton;
    private javax.swing.JButton importanceSortButton;
    private javax.swing.JPanel itemListPanel;
    private javax.swing.JScrollPane itemScrollPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel listIdentifierLabel;
    private javax.swing.JPanel listViewPanel;
    private javax.swing.JButton logOutButton2;
    private javax.swing.JButton nameSortButton;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton removeItemButton;
    private javax.swing.JButton searchByNameButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JLabel sortByLabel;
    private javax.swing.JButton storeSortButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    
}
